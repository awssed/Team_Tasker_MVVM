<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background" Value="#FF2B2B2B"/>
    </Style>
    <Storyboard x:Key="ViewAnimation">
        <DoubleAnimation From="0" To="1" Duration="0:0:0.5"
                          Storyboard.TargetProperty="Opacity" />
    </Storyboard>
    <SolidColorBrush x:Key="TextColor" Color="White" />
    <!--Images-->
    <BitmapImage x:Key="SearchIcon" UriSource="D:\Учёба\4сем\ОПП\TeamTasker\Images\Light_Search.png"/>
    <BitmapImage x:Key="Moon" UriSource="D:\Учёба\4сем\ОПП\TeamTasker\Images\light_moon.png"/>
    <BitmapImage x:Key="Sun" UriSource="D:\Учёба\4сем\ОПП\TeamTasker\Images\light_sun.png"/>
    <BitmapImage x:Key="LoginIcon" UriSource="D:\Учёба\4сем\ОПП\TeamTasker\Images\Light_Login.png"/>
    <BitmapImage x:Key="NameIcon" UriSource="D:\Учёба\4сем\ОПП\TeamTasker\Images\Light_Name.png"/>
    <BitmapImage x:Key="PasswordIcon" UriSource="D:\Учёба\4сем\ОПП\TeamTasker\Images\Light_Password.png"/>
    <BitmapImage x:Key="RepeatPasswordIcon" UriSource="D:\Учёба\4сем\ОПП\TeamTasker\Images\Light_Repeat.png"/>
    <Style x:Key="AnimatedContentControlStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="ViewStates">
                                <VisualState Name="Default">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="NewView">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.3" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:0.3">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="SwitchView">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.3" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0:0:0.3">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3" BeginTime="0:0:0.3" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioButTonStyle" TargetType="RadioButton">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     CornerRadius="5">
                            <!-- Добавляем закругление с радиусом 5 -->
                            <TextBlock VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Text="{TemplateBinding Property=Content}"
                            FontFamily="Roboto"
                            FontSize="20"/>
                            <!-- Используем шрифт Roboto -->
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(RadioButton.Background).(SolidColorBrush.Color)"
                                     To="#FF673AB7" Duration="0:0:0.5"/>
                            <ColorAnimation Storyboard.TargetProperty="(RadioButton.Foreground).(SolidColorBrush.Color)"
                                     To="White" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(RadioButton.Background).(SolidColorBrush.Color)"
                                     To="Transparent" Duration="0:0:0.5"/>
                            <ColorAnimation Storyboard.TargetProperty="(RadioButton.Foreground).(SolidColorBrush.Color)"
                                     To="Black" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--MainWindowStyle-->
    <Style x:Key="MenuItemStyle" TargetType="MenuItem">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="50,20,50,20"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" VerticalAlignment="Stretch">
                        <ContentPresenter Content="{TemplateBinding Header}" Margin="30,10,30,10"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Black" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).Color"
        To="#FF3C3B3B" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).Color"
        To="#FF2B2B2B" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF3C3B3B"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="DodgerBlue"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="FontSize" Duration="0:0:0.2" To="20" AutoReverse="False" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="FontSize" Duration="0:0:0.2" To="18" AutoReverse="False" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--AddProjectStyle-->
    <Style x:Key="LabelAddProjectSyle" TargetType="Label">
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10 10"/>
    </Style>
    <!--ProjectCardStyle-->
    <Style x:Key="ProjectCardStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="#FF3C3C3C"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}" BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="5">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="2" Color="#888888" Opacity="0.5" BlurRadius="5"/>
                        </Border.Effect>
                        <Grid>
                            <ContentPresenter/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFA623BD"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TaskCardStyle-->
    <Style x:Key="TaskCardListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="20"/>
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="Background" Value="#FF3C3C3C"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Background="{TemplateBinding Background}" BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="5">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="2" Color="#888888" Opacity="0.5" />
                                    </Border.Effect>
                                    <Grid>
                                        <ContentPresenter/>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FFA623BD"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpiredTaskBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="5"/>
    </Style>
    <Style x:Key="inputText" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="0 4"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Padding" Value="6 6"/>
        <Setter Property="FontFamily" Value="Malgun Gothic Semilight"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" 
                     BorderBrush="{TemplateBinding BorderBrush}" 
                     BorderThickness="{TemplateBinding BorderThickness}" 
                     CornerRadius="1">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Setting Style-->
    <!--SettingsWindow Style-->
    <sys:Double x:Key="ControlLightWidth">50</sys:Double>
    <sys:Double x:Key="ControlLightHeight">50</sys:Double>
    <sys:Double x:Key="ControlDarkWidth">40</sys:Double>
    <sys:Double x:Key="ControlDarkHeight">40</sys:Double>
    <BitmapImage x:Key="LightVersionImage" UriSource="D:\TeamTasker\Images\dark_moon.png"/>
    <BitmapImage x:Key="DarkVersionImage" UriSource="D:\TeamTasker\Images\dark_sun.png"/>
    <Style TargetType="Label" x:Key="LabelWindowSettings">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="50,10,50,10"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="Gray"/>
    </Style>
    <Style x:Key="ButtonCancelStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="20,10,20,10"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Width" Value="150"/>
    </Style>
    <Style x:Key="ButtonTheme" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
    </Style>
</ResourceDictionary>